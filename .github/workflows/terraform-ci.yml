# name: Terraform CI

# on:
#   push:
#     branches:
#       - main  # Default Branch
#   workflow_dispatch:  # Permite ejecución manual
#     inputs:
#       environment:
#         description: 'Environment to deploy'
#         required: true
#         default: 'dev'
#         type: choice
#         options:
#         - dev
#         - staging
#         - prod

# jobs:
#   terraform:
#     runs-on: ubuntu-latest
#     environment: ${{ github.event.inputs.environment || 'dev' }}
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-west-1

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.6.0

#       - name: Terraform Format Check
#         run: terraform fmt -check -recursive

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Validate
#         run: terraform validate

#       - name: Terraform Plan
#         run: terraform plan -out=tfplan
#         continue-on-error: true

#       - name: Terraform Plan Status
#         if: always()
#         run: |
#           if [ $? -eq 0 ]; then
#             echo "✅ Terraform plan completed successfully"
#           else
#             echo "❌ Terraform plan failed"
#             exit 1
#           fi


name: Terraform CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    outputs:
      tfplan-path: tfplan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Validate tfstate presence (local or remote backend)
        shell: bash
        run: |
          set -euo pipefail
          echo "Checking for backend or local state..."
          if find . -type f -name "*.tf" -print0 | xargs -0 grep -nE 'backend "(s3|azurerm|gcs|http)"' -q; then
            echo "Remote backend detected. Skipping local terraform.tfstate check."
          else
            if [ -f terraform.tfstate ]; then
              echo "Found terraform.tfstate in repo."
            else
              echo "terraform.tfstate not found and no remote backend configured." >&2
              exit 1
            fi
          fi

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  apply:
    name: Terraform Apply (requires approval)
    needs: plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: ${{ github.event.inputs.environment || 'prod' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan